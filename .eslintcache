[{"D:\\test\\mjira\\src\\index.tsx":"1","D:\\test\\mjira\\src\\reportWebVitals.ts":"2","D:\\test\\mjira\\src\\App.tsx":"3","D:\\test\\mjira\\src\\context\\auth-context.tsx":"4","D:\\test\\mjira\\src\\unauthenticated-app\\index.tsx":"5","D:\\test\\mjira\\src\\utils\\http.ts":"6","D:\\test\\mjira\\src\\auth-provider.ts":"7","D:\\test\\mjira\\src\\utils\\index.ts":"8","D:\\test\\mjira\\src\\unauthenticated-app\\login.tsx":"9","D:\\test\\mjira\\src\\unauthenticated-app\\register.tsx":"10","D:\\test\\mjira\\src\\authenticated-app.tsx":"11","D:\\test\\mjira\\src\\screens\\project-list\\index.tsx":"12","D:\\test\\mjira\\src\\screens\\project-list\\search-panel.tsx":"13","D:\\test\\mjira\\src\\screens\\project-list\\list.tsx":"14","D:\\test\\mjira\\src\\context\\index.tsx":"15"},{"size":674,"mtime":1612405249647,"results":"16","hashOfConfig":"17"},{"size":425,"mtime":1612342898367,"results":"18","hashOfConfig":"17"},{"size":393,"mtime":1612404293752,"results":"19","hashOfConfig":"17"},{"size":1499,"mtime":1612405382800,"results":"20","hashOfConfig":"17"},{"size":483,"mtime":1612405382890,"results":"21","hashOfConfig":"17"},{"size":1230,"mtime":1612405382980,"results":"22","hashOfConfig":"17"},{"size":1390,"mtime":1612405382747,"results":"23","hashOfConfig":"17"},{"size":2219,"mtime":1612342898572,"results":"24","hashOfConfig":"17"},{"size":1228,"mtime":1612405382911,"results":"25","hashOfConfig":"17"},{"size":1237,"mtime":1612405382945,"results":"26","hashOfConfig":"17"},{"size":321,"mtime":1612405382766,"results":"27","hashOfConfig":"17"},{"size":1157,"mtime":1612405382851,"results":"28","hashOfConfig":"17"},{"size":1220,"mtime":1612405382874,"results":"29","hashOfConfig":"17"},{"size":836,"mtime":1612404398800,"results":"30","hashOfConfig":"17"},{"size":222,"mtime":1612405382814,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dtngod",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"36"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"36"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"36"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"D:\\test\\mjira\\src\\index.tsx",[],"D:\\test\\mjira\\src\\reportWebVitals.ts",[],["68","69"],"D:\\test\\mjira\\src\\App.tsx",[],"D:\\test\\mjira\\src\\context\\auth-context.tsx",["70"],"import React, { ProviderProps, ReactNode, useState } from \"react\";\nimport * as auth from \"auth-provider\";\nimport { User } from \"screens/project-list/search-panel\";\nimport { http } from \"utils/http\";\nimport { useMount } from \"utils\";\n\ninterface AuthForm {\n  username: string;\n  password: string;\n}\n\nconst bootstrapUser = async () => {\n  let user = null;\n  const token = auth.getToken();\n  if (token) {\n    const data = await http(\"me\", { token });\n    user = data.user;\n  }\n  return user;\n};\n\nconst AuthContext = React.createContext<\n  | {\n      user: User | null;\n      register: (form: AuthForm) => Promise<void>;\n      login: (form: AuthForm) => Promise<void>;\n      logout: () => Promise<void>;\n    }\n  | undefined\n>(undefined);\nAuthContext.displayName = \"AuthContext\";\n\nexport const AuthProvider = ({ children }: { children: ReactNode }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  // point free\n  const login = (form: AuthForm) => auth.login(form).then(setUser);\n  const register = (form: AuthForm) => auth.register(form).then(setUser);\n  const logout = () => auth.logout().then(() => setUser(null));\n\n  useMount(() => {\n    bootstrapUser().then(setUser);\n  });\n\n  return (\n    <AuthContext.Provider\n      children={children}\n      value={{ user, login, register, logout }}\n    />\n  );\n};\n\nexport const useAuth = () => {\n  const context = React.useContext(AuthContext);\n  if (!context) {\n    throw new Error(\"useAuth必须在AuthProvider中使用\");\n  }\n  return context;\n};\n","D:\\test\\mjira\\src\\unauthenticated-app\\index.tsx",[],"D:\\test\\mjira\\src\\utils\\http.ts",[],"D:\\test\\mjira\\src\\auth-provider.ts",[],"D:\\test\\mjira\\src\\utils\\index.ts",["71"],"D:\\test\\mjira\\src\\unauthenticated-app\\login.tsx",["72","73","74"],"import React, { FormEvent } from \"react\";\nimport { cleanObject } from \"utils\";\nimport { useAuth } from \"context/auth-context\";\n\n// interface Base {\n//   id: number\n// }\n//\n// interface Advance extends Base {\n//   name: string\n// }\n//\n// const test = (p: Base) => {\n// }\n//\n// // 鸭子类型(duck typing)：面向接口编程 而不是 面向对象编程\n// const a = {id: 1, name: 'jack'}\n// test(a)\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport const LoginScreen = () => {\n  const { login, user } = useAuth();\n\n  // HTMLFormElement extends Element\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const username = (event.currentTarget.elements[0] as HTMLInputElement)\n      .value;\n    const password = (event.currentTarget.elements[1] as HTMLInputElement)\n      .value;\n    login({ username, password });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"username\">用户名</label>\n        <input type=\"text\" id={\"username\"} />\n      </div>\n      <div>\n        <label htmlFor=\"password\">密码</label>\n        <input type=\"password\" id={\"password\"} />\n      </div>\n      <button type={\"submit\"}>登录</button>\n    </form>\n  );\n};\n","D:\\test\\mjira\\src\\unauthenticated-app\\register.tsx",["75","76","77"],"import React, { FormEvent } from \"react\";\nimport { cleanObject } from \"utils\";\nimport { useAuth } from \"context/auth-context\";\n\n// interface Base {\n//   id: number\n// }\n//\n// interface Advance extends Base {\n//   name: string\n// }\n//\n// const test = (p: Base) => {\n// }\n//\n// // 鸭子类型(duck typing)：面向接口编程 而不是 面向对象编程\n// const a = {id: 1, name: 'jack'}\n// test(a)\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport const RegisterScreen = () => {\n  const { register, user } = useAuth();\n\n  // HTMLFormElement extends Element\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    const username = (event.currentTarget.elements[0] as HTMLInputElement)\n      .value;\n    const password = (event.currentTarget.elements[1] as HTMLInputElement)\n      .value;\n    register({ username, password });\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        <label htmlFor=\"username\">用户名</label>\n        <input type=\"text\" id={\"username\"} />\n      </div>\n      <div>\n        <label htmlFor=\"password\">密码</label>\n        <input type=\"password\" id={\"password\"} />\n      </div>\n      <button type={\"submit\"}>注册</button>\n    </form>\n  );\n};\n","D:\\test\\mjira\\src\\authenticated-app.tsx",[],"D:\\test\\mjira\\src\\screens\\project-list\\index.tsx",["78","79","80"],"import React from \"react\";\nimport { SearchPanel } from \"screens/project-list/search-panel\";\nimport { List } from \"screens/project-list/list\";\nimport { useEffect, useState } from \"react\";\nimport { cleanObject, useDebounce, useMount } from \"../../utils\";\nimport * as qs from \"qs\";\nimport { useHttp } from \"utils/http\";\n\n// 使用 JS 的同学，大部分的错误都是在 runtime(运行时) 的时候发现的\n// 我们希望，在静态代码中，就能找到其中的一些错误 -> 强类型\nconst apiUrl = process.env.REACT_APP_API_URL;\n\nexport const ProjectListScreen = () => {\n  const [users, setUsers] = useState([]);\n\n  const [param, setParam] = useState({\n    name: \"\",\n    personId: \"\",\n  });\n  const debouncedParam = useDebounce(param, 200);\n  const [list, setList] = useState([]);\n  const client = useHttp();\n\n  useEffect(() => {\n    client(\"projects\", { data: cleanObject(debouncedParam) }).then(setList);\n  }, [debouncedParam]);\n\n  useMount(() => {\n    client(\"users\").then(setUsers);\n  });\n\n  return (\n    <div>\n      <SearchPanel users={users} param={param} setParam={setParam} />\n      <List users={users} list={list} />\n    </div>\n  );\n};\n","D:\\test\\mjira\\src\\screens\\project-list\\search-panel.tsx",["81","82"],"import React from \"react\";\nimport { useEffect, useState } from \"react\";\n\nexport interface User {\n  id: string;\n  name: string;\n  email: string;\n  title: string;\n  organization: string;\n  token: string;\n}\n\ninterface SearchPanelProps {\n  users: User[];\n  param: {\n    name: string;\n    personId: string;\n  };\n  setParam: (param: SearchPanelProps[\"param\"]) => void;\n}\n\nexport const SearchPanel = ({ users, param, setParam }: SearchPanelProps) => {\n  return (\n    <form>\n      <div>\n        {/*setParam(Object.assign({}, param, {name:evt.target.value}))*/}\n        <input\n          type=\"text\"\n          value={param.name}\n          onChange={(evt) =>\n            setParam({\n              ...param,\n              name: evt.target.value,\n            })\n          }\n        />\n        <select\n          value={param.personId}\n          onChange={(evt) =>\n            setParam({\n              ...param,\n              personId: evt.target.value,\n            })\n          }\n        >\n          <option value={\"\"}>负责人</option>\n          {users.map((user) => (\n            <option key={user.id} value={user.id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </form>\n  );\n};\n","D:\\test\\mjira\\src\\screens\\project-list\\list.tsx",[],"D:\\test\\mjira\\src\\context\\index.tsx",[],{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","severity":1,"message":"88","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":30},{"ruleId":"91","severity":1,"message":"92","line":23,"column":6,"nodeType":"93","endLine":23,"endColumn":8,"suggestions":"94"},{"ruleId":"87","severity":1,"message":"95","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":21},{"ruleId":"87","severity":1,"message":"96","line":19,"column":7,"nodeType":"89","messageId":"90","endLine":19,"endColumn":13},{"ruleId":"87","severity":1,"message":"97","line":22,"column":18,"nodeType":"89","messageId":"90","endLine":22,"endColumn":22},{"ruleId":"87","severity":1,"message":"95","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":21},{"ruleId":"87","severity":1,"message":"96","line":19,"column":7,"nodeType":"89","messageId":"90","endLine":19,"endColumn":13},{"ruleId":"87","severity":1,"message":"97","line":22,"column":21,"nodeType":"89","messageId":"90","endLine":22,"endColumn":25},{"ruleId":"87","severity":1,"message":"98","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"96","line":11,"column":7,"nodeType":"89","messageId":"90","endLine":11,"endColumn":13},{"ruleId":"91","severity":1,"message":"99","line":26,"column":6,"nodeType":"93","endLine":26,"endColumn":22,"suggestions":"100"},{"ruleId":"87","severity":1,"message":"101","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":19},{"ruleId":"87","severity":1,"message":"102","line":2,"column":21,"nodeType":"89","messageId":"90","endLine":2,"endColumn":29},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"@typescript-eslint/no-unused-vars","'ProviderProps' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'callback'. Either include it or remove the dependency array. If 'callback' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["105"],"'cleanObject' is defined but never used.","'apiUrl' is assigned a value but never used.","'user' is assigned a value but never used.","'qs' is defined but never used.","React Hook useEffect has a missing dependency: 'client'. Either include it or remove the dependency array.",["106"],"'useEffect' is defined but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},"Update the dependencies array to be: [callback]",{"range":"111","text":"112"},"Update the dependencies array to be: [client, debouncedParam]",{"range":"113","text":"114"},[546,548],"[callback]",[849,865],"[client, debouncedParam]"]